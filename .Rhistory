cor(tinggi, bb)
0.95*sqrt(4)/sqrt(1-0.95^2)
# No 4
x <- c(1, 2, 4, 6, 7)
y <- c(6, 10, 14, 16, 20)
model <- lm(y ~ x)
summary(model)
?chisq.test
M <- as.table(rbind(c(762, 327, 468), c(484, 239, 477)))
M
dimnames(M) <- list(gender = c("F", "M"),
party = c("Democrat","Independent", "Republican"))
M
(Xsq <- chisq.test(M))  # Prints test summary
Xsq
Xsq$observed   # observed counts (same as M)
Xsq$expected   # expected counts under the null
Xsq$residuals  # Pearson residuals
Xsq$stdres     # standardized residuals
sum(Xsq$residuals)
sum(Xsq$residuals^2)
m <- rbind(c(71, 29),
c(62, 38))
m
dimnames(m) <- list(JK = c("L", "P"),
Hukuman_Mati = c("Setuju", Tidak))
dimnames(m) <- list(JK = c("L", "P"),
Hukuman_Mati = c("Setuju", "Tidak"))
m
uji <- chisq.test(m)
summary(uji)
uji
?chisq.test
uji$observed
uji$expected
uji$residuals
sum(uji$residuals^2)
sum(uji$stdres^2)
m <- rbind(c(71, 29),
c(62, 38))
dimnames(m) <- list(JK = c("L", "P"),
Hukuman_Mati = c("Setuju", "Tidak"))
uji <- chisq.test(m)
uji$observed
uji$expected
uji$residuals
sum(uji$residuals^2)
sqrt(sum(uji$residuals^2))
sum(uji$residuals^2)^2
uji <- chisq.test(m)
uji
uji$observed-
uji$expected+
uji$residuals
uji$observed-
uji$expected-
uji$residuals
uji$observed-
uji$expected
uji$residuals
uji$observed
uji$expected
uji$residuals
uji$residuals
sum(uji$residuals^2)
m <- rbind(c(20, 60),
c(40, 40))
dimnames(m) <- list(JK = c("L", "P"),
Hukuman_Mati = c("Setuju", "Tidak"))
uji
m <- rbind(c(10, 70),
c(40, 40))
dimnames(m) <- list(JK = c("L", "P"),
Hukuman_Mati = c("Setuju", "Tidak"))
uji
m <- rbind(c(10, 70),
c(60, 20))
dimnames(m) <- list(JK = c("L", "P"),
Hukuman_Mati = c("Setuju", "Tidak"))
uji
uji <- chisq.test(m)
uji
uji$observed
uji$expected
uji$residuals
m <- rbind(c(10, 70),
c(60, 20))
dimnames(m) <- list(JK = c("L", "P"),
Hukuman_Mati = c("Setuju", "Tidak"))
uji <- chisq.test(m)
uji
uji$observed
uji$expected
uji$residuals
model <- lm(y ~ x)
summary(model)
# No 4
x <- c(1, 2, 4, 6, 7)
y <- c(6, 10, 14, 16, 20)
model <- lm(y ~ x)
summary(model)
Jarak <- c(31, 38, 48, 52, 63, 67, 75, 84, 89, 99)
Emisi <- c(553, 590, 608, 682, 752, 725, 834, 752, 845,	960)
model <- lm(Emisi ~ Jarak)
summary(model)
m <- rbind(c(10, 70),
c(60, 20))
dimnames(m) <- list(JK = c("L", "P"),
Hukuman_Mati = c("Setuju", "Tidak"))
uji <- chisq.test(m)
uji
summary(uji)
uji$statistic
uji$parameter
# No 4
x <- c(1, 2, 4, 6, 7)
y <- c(6, 10, 14, 16, 20)
model <- lm(y ~ x)
summary(model)
Jarak <- c(31, 38, 48, 52, 63, 67, 75, 84, 89, 99)
Emisi <- c(553, 590, 608, 682, 752, 725, 834, 752, 845,	960)
model <- lm(Emisi ~ Jarak)
summary(model)
# No 1
prop.test(1200, 2000, p = 0.5, alternative = "greater")  # A1
prop.test(600, 1000, p = 0.5, alternative = "greater")
# No 2
tsum.test(mean.x = 55, s.x = sqrt(4.2), n.x = 25,
alternative = "greater", mu = 50, conf.level = 0.95)
library(BSDA)
# No 2
tsum.test(mean.x = 55, s.x = sqrt(4.2), n.x = 25,
alternative = "greater", mu = 50, conf.level = 0.95)
# No 4
x <- c(1, 2, 4, 6, 7)
y <- c(6, 10, 14, 16, 20)
model <- lm(y ~ x)
summary(model)
# No 3
tsum.test(mean.x = 40, s.x = 6, n.x = 15,
mean.y = 50, s.y = 10.2, n.y = 10,
alternative = "less",
conf.level = 0.95, var.equal = T) #A1
tsum.test(mean.x = 40, s.x = 6, n.x = 15,
mean.y = 50, s.y = 10.2, n.y = 10,
alternative = "two.sided",
conf.level = 0.95, var.equal = T) #A2
tsum.test(mean.x = 55, s.x = sqrt(4.2), n.x = 25,
alternative = "less", mu = 50, conf.level = 0.95) #A2
tsum.test(mean.x = 55, s.x = sqrt(4.2), n.x = 25,
alternative = "less", mu = 50, conf.level = 0.95) #A2
tsum.test(mean.x = 40, s.x = 6, n.x = 15,
mean.y = 50, s.y = 10.2, n.y = 10,
alternative = "two.sided",
conf.level = 0.95, var.equal = T) #A2
# No 3
tsum.test(mean.x = 40, s.x = 6, n.x = 15,
mean.y = 50, s.y = 10.2, n.y = 10,
alternative = "less",
conf.level = 0.95, var.equal = T) #A1
tsum.test(mean.x = 40, s.x = 6, n.x = 15,
mean.y = 50, s.y = 10.2, n.y = 10,
alternative = "two.sided",
conf.level = 0.95, var.equal = T) #A2
tsum.test(mean.x = 40, s.x = 6, n.x = 15,
mean.y = 50, s.y = 10.2, n.y = 10,
alternative = "two.sided",
conf.level = 0.95, var.equal = T) #A2
?lm
model <- lm(y ~ x)
summary(model)
anova(model)
iris
Lama_Studi <- c(14, 25, 15,	5, 10, 12, 5, 21)
IPK <- c(2.8,	3.6, 3.4,	3, 3.1,	3.3, 2.7,	3.8)
model <- lm(IPK ~ Lama_Studi)
summary(model)
Lama_Studi <- c(14, 25, 15,	5, 10, 12, 5, 21)
IPK <- c(2.8,	3.6, 3.4,	3, 3.1,	3.3, 2.7,	3.8)
model <- lm(IPK ~ Lama_Studi)
summary(model)
anova(model)
0.67454/0.05903
Hershey()
colors()
hcl.colors()
hcl()
demo(hcl)
demo(graphics)
demo(base)
demo(glm.vr)
library(quantmod)
getSymbols("UNVR", from = '2022-01-01',
to = "2022-10-31",warnings = FALSE,
auto.assign = TRUE)
head(UNVR)
x_bar <- 15
sd <- 10
z <- (50-x_bar)/sd
pnorm(50,mean = 15, sd = 10, lower.tail = F)
pnorm(z)
curve(x^2 + y^2, -100,100)
curve(x^2, -100,100)
curve(x^2, -10,100)
curve(x^2, -10,10)
curve(x^2, -10,10)
curve(sin(x), -10,10)
curve(cos(x), -10,10)
curve(tan(x), -10,10)
curve(1/x, 0,10)
curve(1/x, -10, 10)
curve(1/x, -10, 10)
?curve
curve(1/x, -10, 10)
curve(^2, -10, 10, add = TRUE)
curve(1/x, -10, 10)
curve(x^2, -10, 10, add = TRUE)
curve(-x^2, -10, 10, add = TRUE)
?curve
data(mtcars)
x <- mtcars[, c("cyl", "gear", "carb", "hp")]
item_reliability(x)
install.packages("performance")
library(performance)
data(mtcars)
x <- mtcars[, c("cyl", "gear", "carb", "hp")]
item_reliability(x)
data(mtcars)
x <- mtcars[, c("cyl", "gear", "carb", "hp")]
cronbachs_alpha(x)
install.packages("gptstudio")
require(devtools)
install.packages("devtools", dependencies = Y)
install.packages("devtools", dependencies = T)
require(devtools)
install_github("MichelNivard/gptstudio")
library(fastmap)
install.packages(c("blavaan", "cachem", "dbplyr", "dtplyr", "fastmap", "flextable", "forecast", "Formula", "haven", "httr", "igraph", "lava", "packrat", "posterior", "RcppArmadillo", "RcppParallel", "recipes", "tidyverse", "xts"))
update.packages(ask = F, checkBuilt = T)
install_github("MichelNivard/gptstudio")
require(devtools)
install_github("MichelNivard/gptstudio")
install_github("MichelNivard/gptstudio", force = TRUE)
gptstudio:::chat_gpt_addin()
Sys.setenv(OPENAI_API_KEY = "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")
gptstudio:::chat_gpt_addin()
Sys.setenv(OPENAI_API_KEY = "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")
#!/usr/bin/env python
# -*- coding: utf-8 -*-
import re
curve(-x^2 + 5, -10, 10, add = TRUE, col = "pink", lwd = 4)
curve(-x^2 + x, -10, 10, add = TRUE)
curve(-x^2 + 5, -10, 10, add = TRUE, col = "pink", lwd = 4)
curve(x^2, -10, 10, add = TRUE)
update.packages(ask = F, checkBuilt = T)
t.test(iris$Sepal.Length, mu = 12, alternative = "greater")
t.test(iris$Sepal.Length, mu = 4, alternative = "greater")
t.test(iris$Sepal.Length, mu = 5, alternative = "greater")
t.test(iris$Sepal.Length, mu = 5.7, alternative = "greater")
t.test(iris$Sepal.Length, mu = 5.8, alternative = "greater")
curve(x, from = 1, to = 10)
?curve
curve(rnorm)
curve(dnorm)
curve(t)
?t
dt
curve(dt)
curve(dt(23,5))
?dt
ikan <- c("salmon", "Teri", "Tuna")
sayur <- c("Brokoli", "Letuce", "Bayam")
yoghurt <- c("plain", "apple", "orange")
ls(list = "y")
ls(pat = "y")
ikan <- c("salmon", "Teri", "Tuna")
sayur <- c("Brokoli", "Letuce", "Bayam")
yoghurt <- c("plain", "apple", "orange")
ls(pat = "y")
ikan <- c("salmon", "Teri", "Tuna")
sayur <- c("Brokoli", "Letuce", "Bayam")
yoghurt <- c("plain", "apple", "orange")
ls(pat = "y")
1 - pt(1:5, df = 1)
qt(.975, df = c(1:10,20,50,100,1000))
tt <- seq(0, 10, length.out = 21)
ncp <- seq(0, 6, length.out = 31)
ptn <- outer(tt, ncp, function(t, d) pt(t, df = 3, ncp = d))
t.tit <- "Non-central t - Probabilities"
image(tt, ncp, ptn, zlim = c(0,1), main = t.tit)
persp(tt, ncp, ptn, zlim = 0:1, r = 2, phi = 20, theta = 200, main = t.tit,
xlab = "t", ylab = "non-centrality parameter",
zlab = "Pr(T <= t)")
plot(function(x) dt(x, df = 3, ncp = 2), -3, 11, ylim = c(0, 0.32),
main = "Non-central t - Density", yaxs = "i")
install.packages("insatllr")
install.packages("installr")
library(installr)
installr::get_latest_r_version()
library(installr)
?updateR
updateR()
Sys.info()
update.packages(ask = F, checkBuilt = T)
update.packages(ask=F, checkBuilt = T)
update.packages(ask = F, checkBuilt = T)
library(flexdashboard)
Sys.setlocale("LC_TIME", "IND")
#library(flipTime)
#UpdateEvery(1, "hours", options = "wakeup")
library(readxl)
db <- read_excel("data.xlsx")
library(tidyverse)
data <- db %>%
group_by(prodi) %>%
summarize(minat = max(peminat))
data <- read_excel("G:/My Drive/#PMB/2023/03_SMM/23smm/Statistik_Keketatan_Prodi_smmptn_2023.xlsx")
data
data <- data[,-2]
names(data)
setwd("G:/My Drive/#PMB/2023/Dashboard/23pmb")
library(tidyverse)
library(readxl)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
library(readxl)
library(tidyverse)
file <- list.files()
file
file |> select(starts_with("2023"))
?starts_with
?list.files
list.files(pattern = "2023")
list.files(pattern = "2023*")
list.files(pattern = "2023")
list.files(pattern = Sys.glob("2023*"))
list.files(pattern = Sys.glob("2023"))
?pattern
?list.files
file <- list.files()
file
list.files(pattern = glob2rx("2023*"))
setwd("G:/My Drive/DATABASE MHS/Profil Mhs")
dir()
file <- list.files(pattern = glob2rx("2023*"))
file
setwd("G:/My Drive/DATABASE MHS/Profil Mhs")
file <- list.files(pattern = glob2rx("2023*"))
file
setwd("G:/My Drive/#PMB/2023/Dashboard/23pmb")
file <- list.files("G:/My Drive/DATABASE MHS/Profil Mhs",pattern = glob2rx("2023*"))
file
data <- NULL
for (i in 1:length(file)) {
raw <- read_excel(file[i], skip = 10)
data <- rbind(data, raw)
}
data <- NULL
for (i in 1:length(file)) {
raw <- read_excel(paste0("G:/My Drive/DATABASE MHS/Profil Mhs", file[i]), skip = 10)
data <- rbind(data, raw)
}
data <- NULL
for (i in 1:length(file)) {
raw <- read_excel(paste0("G:/My Drive/DATABASE MHS/Profil Mhs/", file[i]), skip = 10)
data <- rbind(data, raw)
}
data
dim(data)
names(data)
data <- data[,c(3,20,21)]
data
data <- NULL
for (i in 1:length(file)) {
raw <- read_excel(paste0("G:/My Drive/DATABASE MHS/Profil Mhs/", file[i]), skip = 10)
data <- rbind(data, raw)
}
data
data <- data[,c(3,20,21)]
dim(data)
names(data)
names(data) <- c("jk", "provinsi", "kab")
data
data$provinsi <- toupper(data$provinsi)
data$kab <- toupper(data$kab)
data
?str_replace
data$provinsi <- str_replace(data$provinsi, "PROP. ", "")
data
data$provinsi <- ifelse(data$provinsi == "BANTEN", "BANTEN", data$provinsi)
data
data$provinsi <- ifelse(data$provinsi == "BANTEN", "BANTEN", "zlainnya")
data
data <- data |>
group_by(provinsi, kab, jk) |>
summarise(jml = n())
data
data <- NULL
data <- NULL
data <- NULL
file <- list.files("G:/My Drive/DATABASE MHS/Profil Mhs",pattern = glob2rx("2023*"))
file <- list.files("G:/My Drive/DATABASE MHS/Profil Mhs",pattern = glob2rx("2023*"))
data
setwd("G:/My Drive/#PMB/2023/Dashboard/23pmb")
library(tidyverse)
library(tidyverse)
library(readxl)
file <- list.files("G:/My Drive/DATABASE MHS/Profil Mhs",pattern = glob2rx("2023*"))
file
data <- NULL
for (i in 1:length(file)) {
raw <- read_excel(paste0("G:/My Drive/DATABASE MHS/Profil Mhs/", file[i]), skip = 10)
data <- rbind(data, raw)
}
for (i in 1:length(file)) {
raw <- read_excel(paste0("G:/My Drive/DATABASE MHS/Profil Mhs/", file[i]), skip = 10)
data <- rbind(data, raw)
}
data
data
data <- data[,c(3,20,21)]
names(data) <- c("jk", "provinsi", "kab")
data$provinsi <- toupper(data$provinsi)
data$kab <- toupper(data$kab)
data$provinsi <- str_replace(data$provinsi, "PROP. ", "")
data$provinsi <- ifelse(data$provinsi == "BANTEN", "BANTEN", "zlainnya")
data$kab <- ifelse(data$provinsi == "zlainnya", "zlainnya", data$kab)
data
data <- data |>
group_by(provinsi, kab, jk) |>
summarise(jml = n())
data
data
?pivot_wider
data |>
pivot_wider(names_from = jk, values_from = jml)
data <- data |>
pivot_wider(names_from = jk, values_from = jml)
data
data <- data[,-1]
data
library(janitor)
library(kableExtra)
data <- adorn_totals(data, where = c("row", "col"), name = "JML")
data
data <- NULL
for (i in 1:length(file)) {
raw <- read_excel(paste0("G:/My Drive/DATABASE MHS/Profil Mhs/", file[i]), skip = 10)
data <- rbind(data, raw)
}
for (i in 1:length(file)) {
raw <- read_excel(paste0("G:/My Drive/DATABASE MHS/Profil Mhs/", file[i]), skip = 10)
data <- rbind(data, raw)
}
data
data
data <- data[,c(3,20,21)]
names(data) <- c("jk", "provinsi", "kab")
names(data) <- c("jk", "provinsi", "kab")
data$provinsi <- toupper(data$provinsi)
data$provinsi <- toupper(data$provinsi)
data$kab <- toupper(data$kab)
data$provinsi <- str_replace(data$provinsi, "PROP. ", "")
data$provinsi <- ifelse(data$provinsi == "BANTEN", "BANTEN", "zlainnya")
data$kab <- ifelse(data$provinsi == "zlainnya", "zlainnya", data$kab)
data <- data |>
group_by(provinsi, kab, jk) |>
summarise(jml = n())
data
data
sum(data$jml)
file
data <- NULL
for (i in 1:length(file)) {
raw <- read_excel(paste0("G:/My Drive/DATABASE MHS/Profil Mhs/", file[i]), skip = 10)
data <- rbind(data, raw)
}
data
dim(data)
data <- data[,c(3,20,21)]
names(data) <- c("jk", "provinsi", "kab")
data$provinsi <- toupper(data$provinsi)
data$kab <- toupper(data$kab)
data$provinsi <- str_replace(data$provinsi, "PROP. ", "")
dim(data)
data$provinsi <- ifelse(data$provinsi == "BANTEN", "BANTEN", "zlainnya")
data$kab <- ifelse(data$provinsi == "zlainnya", "zlainnya", data$kab)
dim(data)
data <- data |>
group_by(provinsi, kab, jk) |>
summarise(jml = n())
data
sum(data$jml)
data <- data |>
pivot_wider(names_from = jk, values_from = jml)
data
data <- data[,-1]
data <- adorn_totals(data, where = c("row", "col"), name = "JML")
data
kable(data) %>%
kable_styling(bootstrap_options = "striped", full_width = F,
latex_options = "scale_down") %>%
add_header_above(c(" " = 1, "Jenis Kelamin" = 2, " " = 1))
names(data) <- c("Kabupaten/Kota", "Laki-Laki", "Perempuan", "Jumlah")
kable(data) %>%
kable_styling(bootstrap_options = "striped", full_width = F,
latex_options = "scale_down") %>%
add_header_above(c(" " = 1, "Jenis Kelamin" = 2, " " = 1))
data[9,1]
data[9,1] <- "Kota lain"
data
setwd("G:/My Drive/#PMB/2023/Dashboard/23pmb")
